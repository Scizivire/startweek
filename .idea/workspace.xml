<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="ae8e1e46-7e5b-4d7a-85f1-8df9463c7cad" name="Default Changelist" comment="opdr 1 - 8" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1QJu7Ijxxvyzlfr68dSI0vO3GxC" />
  <component name="PropertiesComponent">
    <property name="full.screen.before.presentation.mode" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="JUnit.GameStateParserSpec.PadNAdd should add padding with testcase : #testCase">
    <configuration name="CardMoveChecksSpec.Invalid input calling checkPlayerInput whith #input will throw #exception.getSimpleName" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="solitaire" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nl.quintor.solitaire.game.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="nl.quintor.solitaire.game" />
      <option name="MAIN_CLASS_NAME" value="nl.quintor.solitaire.game.CardMoveChecksSpec" />
      <option name="METHOD_NAME" value="Invalid input calling checkPlayerInput whith #input will throw #exception.getSimpleName() with message |#message| when testing: #testcase" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CardMoveChecksSpec.Valid input calling cardLevelChecks will not throw exceptions testing : #testCase" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="solitaire" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nl.quintor.solitaire.game.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="nl.quintor.solitaire.game" />
      <option name="MAIN_CLASS_NAME" value="nl.quintor.solitaire.game.CardMoveChecksSpec" />
      <option name="METHOD_NAME" value="Valid input calling cardLevelChecks will not throw exceptions testing : #testCase" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CardMoveChecksSpec.Valid moves will not throw exceptions testing: #testcase" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="solitaire" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nl.quintor.solitaire.game.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="nl.quintor.solitaire.game" />
      <option name="MAIN_CLASS_NAME" value="nl.quintor.solitaire.game.CardMoveChecksSpec" />
      <option name="METHOD_NAME" value="Valid moves will not throw exceptions testing: #testcase" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="GameStateParserSpec.PadNAdd should add padding with testcase : #testCase" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="solitaire" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nl.quintor.solitaire.ui.cli.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="nl.quintor.solitaire.ui.cli" />
      <option name="MAIN_CLASS_NAME" value="nl.quintor.solitaire.ui.cli.GameStateParserSpec" />
      <option name="METHOD_NAME" value="PadNAdd should add padding with testcase : #testCase" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="GameStateParserSpec.cardStringOrNull should return #expectedResult when testing : #testCase" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="solitaire" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="nl.quintor.solitaire.ui.cli.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="nl.quintor.solitaire.ui.cli" />
      <option name="MAIN_CLASS_NAME" value="nl.quintor.solitaire.ui.cli.GameStateParserSpec" />
      <option name="METHOD_NAME" value="cardStringOrNull should return #expectedResult when testing : #testCase" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.GameStateParserSpec.PadNAdd should add padding with testcase : #testCase" />
        <item itemvalue="JUnit.CardMoveChecksSpec.Valid moves will not throw exceptions testing: #testcase" />
        <item itemvalue="JUnit.CardMoveChecksSpec.Invalid input calling checkPlayerInput whith #input will throw #exception.getSimpleName" />
        <item itemvalue="JUnit.GameStateParserSpec.cardStringOrNull should return #expectedResult when testing : #testCase" />
        <item itemvalue="JUnit.CardMoveChecksSpec.Valid input calling cardLevelChecks will not throw exceptions testing : #testCase" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ae8e1e46-7e5b-4d7a-85f1-8df9463c7cad" name="Default Changelist" comment="" />
      <created>1567500851128</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1567500851128</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="opdr 1 - 8" />
    <option name="LAST_COMMIT_MESSAGE" value="opdr 1 - 8" />
  </component>
</project>